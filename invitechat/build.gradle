plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.com'
version = '0.0.1-SNAPSHOT'
description = 'invitechat'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Core
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // PostgreSQL
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Redis / Valkey (Spring Session + RedisTemplate 등)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // jackson
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
//    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // DigestUtils
    implementation 'commons-codec:commons-codec:1.15'

    // validation
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // UUID v7 지원용 라이브러리
    implementation 'com.github.f4b6a3:uuid-creator:5.3.2'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Spring Boot WebSocket + STOMP
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    /* Swagger UI */
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0"

    /* 욕설 필터링 - 커스텀 구현 (외부 라이브러리 호환성 문제로 인해) */
    // implementation 'com.github.VaneProject:bad-word-filtering:main-SNAPSHOT'
    // VaneProject 라이브러리 호환성 문제로 커스텀 구현 사용

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // StatCulculate
    implementation 'net.objecthunter:exp4j:0.4.8'

    /* ---------- TEST ---------- */
    // Mockito 인라인(mockStatic 등)
    testImplementation platform("org.mockito:mockito-bom:5.12.0")
    testImplementation "org.mockito:mockito-core"                   // 코어

    // ✅ 여기에 BOM 한 번 더
    testRuntimeOnly platform("org.mockito:mockito-bom:5.12.0")
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.3"     // 예시

    // H2 (JPA Repository 테스트용, MODE=PostgreSQL로 동작)
    testRuntimeOnly 'com.h2database:h2'

    // 선택: 비동기/리스너 테스트에 유용
    testImplementation 'org.awaitility:awaitility'

    // 선택: Testcontainers (테스트에서 Redis/Mongo/Postgres 띄울 때)
    testImplementation platform("org.testcontainers:testcontainers-bom:1.20.1")
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:postgresql'

    // 컴파일 이슈로 인한 주석 처리
//    testImplementation 'org.testcontainers:redis'
//    testImplementation 'org.mockito:mockito-inline'
}

tasks.named('test') {
    useJUnitPlatform()
}
